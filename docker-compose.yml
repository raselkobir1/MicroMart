version: '3.8'  # âœ… Version must be on top

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - microMart
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 30s
      timeout: 30s
      retries: 3

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - "6379:6379"
      - "8001:8001"      # Management UI
    volumes:
      - redis-stack-data:/data 
    networks:
      - microMart
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.13-management  # Includes the management plugin
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"      # AMQP protocol
      - "15672:15672"    # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro  # Optional advanced config
    networks:
      - microMart

  keycloak:
    image: bitnami/keycloak:latest
    container_name: keycloak
    environment:
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_DATABASE_PORT: 5432
      KEYCLOAK_DATABASE_NAME: keycloak_db
      KEYCLOAK_DATABASE_USER: postgres
      KEYCLOAK_DATABASE_PASSWORD: postgres
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microMart
  

volumes:
  postgres:
  redis-stack-data:
  rabbitmq_data:

networks:
  microMart:
    name: microMart
    driver: bridge
